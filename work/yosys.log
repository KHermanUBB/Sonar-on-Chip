
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4052 (git sha1 a58571d, gcc 7.3.0 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.
echo on

yosys> read_verilog -I ../rtl/include ../rtl/abs.v

1. Executing Verilog-2005 frontend: ../rtl/abs.v
Parsing Verilog input from `../rtl/abs.v' to AST representation.
Generating RTLIL representation for module `\Abs'.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/multiplier.v

2. Executing Verilog-2005 frontend: ../rtl/multiplier.v
Parsing Verilog input from `../rtl/multiplier.v' to AST representation.
Generating RTLIL representation for module `\MULTI'.
Warning: reg '\multiplier_o' is assigned in a continuous assignment at ../rtl/multiplier.v:12.10-12.41.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/signext.v

3. Executing Verilog-2005 frontend: ../rtl/signext.v
Parsing Verilog input from `../rtl/signext.v' to AST representation.
Generating RTLIL representation for module `\signext'.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/MAF_Filter.v

4. Executing Verilog-2005 frontend: ../rtl/MAF_Filter.v
Parsing Verilog input from `../rtl/MAF_Filter.v' to AST representation.
Generating RTLIL representation for module `\MAF_FILTER'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\adder'.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/comparator.v

5. Executing Verilog-2005 frontend: ../rtl/comparator.v
Parsing Verilog input from `../rtl/comparator.v' to AST representation.
Generating RTLIL representation for module `\comparator'.
Warning: reg '\compare_o' is assigned in a continuous assignment at ../rtl/comparator.v:9.10-9.54.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/mic_clk.v

6. Executing Verilog-2005 frontend: ../rtl/mic_clk.v
Parsing Verilog input from `../rtl/mic_clk.v' to AST representation.
Generating RTLIL representation for module `\Mic_Clk'.
Warning: reg '\limit' is assigned in a continuous assignment at ../rtl/mic_clk.v:17.10-17.23.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/reg.v

7. Executing Verilog-2005 frontend: ../rtl/reg.v
Parsing Verilog input from `../rtl/reg.v' to AST representation.
Generating RTLIL representation for module `\REG'.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/sonarOnChip.v

8. Executing Verilog-2005 frontend: ../rtl/sonarOnChip.v
Parsing Verilog input from `../rtl/sonarOnChip.v' to AST representation.
Generating RTLIL representation for module `\SonarOnChip'.
Successfully finished Verilog frontend.

yosys> read_verilog -I ../rtl/include ../rtl/user_project_wrapper.v

9. Executing Verilog-2005 frontend: ../rtl/user_project_wrapper.v
Parsing Verilog input from `../rtl/user_project_wrapper.v' to AST representation.
Generating RTLIL representation for module `\user_project_wrapper'.
Successfully finished Verilog frontend.

yosys> synth -top SonarOnChip

10. Executing SYNTH pass.

yosys> hierarchy -check -top SonarOnChip

10.1. Executing HIERARCHY pass (managing design hierarchy).

10.1.1. Analyzing design hierarchy..
Top module:  \SonarOnChip
Used module:     \Mic_Clk
Used module:     \comparator
Used module:     \MAF_FILTER
Used module:         \shifter
Used module:         \dff
Used module:         \adder
Used module:     \Abs
Used module:     \REG
Used module:     \MULTI
Used module:     \signext
Parameter \n = 32

10.1.2. Executing AST frontend in derive mode using pre-parsed AST for module `\REG'.
Parameter \n = 32
Generating RTLIL representation for module `$paramod\REG\n=s32'00000000000000000000000000100000'.

10.1.3. Analyzing design hierarchy..
Top module:  \SonarOnChip
Used module:     \Mic_Clk
Used module:     \comparator
Used module:     \MAF_FILTER
Used module:         \shifter
Used module:         \dff
Used module:         \adder
Used module:     \Abs
Used module:     $paramod\REG\n=s32'00000000000000000000000000100000
Used module:     \MULTI
Used module:     \signext
Used module:     \REG

10.1.4. Analyzing design hierarchy..
Top module:  \SonarOnChip
Used module:     \Mic_Clk
Used module:     \comparator
Used module:     \MAF_FILTER
Used module:         \shifter
Used module:         \dff
Used module:         \adder
Used module:     \Abs
Used module:     $paramod\REG\n=s32'00000000000000000000000000100000
Used module:     \MULTI
Used module:     \signext
Used module:     \REG
Removing unused module `\user_project_wrapper'.
Removed 1 unused modules.
Mapping positional arguments of cell SonarOnChip.micclk (Mic_Clk).
Mapping positional arguments of cell SonarOnChip.comp (comparator).
Mapping positional arguments of cell SonarOnChip.maf (MAF_FILTER).
Mapping positional arguments of cell SonarOnChip.abs (Abs).
Mapping positional arguments of cell SonarOnChip.amp_reg ($paramod\REG\n=s32'00000000000000000000000000100000).
Mapping positional arguments of cell SonarOnChip.mul (MULTI).
Mapping positional arguments of cell SonarOnChip.se (signext).
Mapping positional arguments of cell SonarOnChip.pcm_reg (REG).
Mapping positional arguments of cell MAF_FILTER.genblk1[4].genblk3.shift (shifter).
Mapping positional arguments of cell MAF_FILTER.genblk1[4].DFF (dff).
Mapping positional arguments of cell MAF_FILTER.genblk1[3].genblk2.ADD (adder).
Mapping positional arguments of cell MAF_FILTER.genblk1[3].DFF (dff).
Mapping positional arguments of cell MAF_FILTER.genblk1[2].genblk2.ADD (adder).
Mapping positional arguments of cell MAF_FILTER.genblk1[2].DFF (dff).
Mapping positional arguments of cell MAF_FILTER.genblk1[1].genblk1.ADD (adder).
Mapping positional arguments of cell MAF_FILTER.genblk1[1].DFF (dff).
Warning: Resizing cell port SonarOnChip.comp.data_i from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.comp.treshold from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.maf.data_in from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.maf.data_out from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.abs.data_in from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.abs.data_out from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.amp_reg.D from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.amp_reg.Q from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.mul.data_i from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.mul.amplify from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.mul.multiplier_o from 33 bits to 32 bits.
Warning: Resizing cell port SonarOnChip.se.data_o from 33 bits to 32 bits.

yosys> proc

10.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

10.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

yosys> proc_rmdead

10.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../rtl/reg.v:16$22 in module $paramod\REG\n=s32'00000000000000000000000000100000.
Marked 1 switch rules as full_case in process $proc$../rtl/reg.v:16$21 in module REG.
Marked 2 switch rules as full_case in process $proc$../rtl/mic_clk.v:22$15 in module Mic_Clk.
Marked 1 switch rules as full_case in process $proc$../rtl/MAF_Filter.v:108$9 in module shifter.
Marked 1 switch rules as full_case in process $proc$../rtl/MAF_Filter.v:86$7 in module adder.
Marked 1 switch rules as full_case in process $proc$../rtl/MAF_Filter.v:62$6 in module dff.
Removed a total of 0 dead cases.

yosys> proc_prune

10.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 1 assignment to connection.

yosys> proc_init

10.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

10.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_mux

10.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\REG\n=s32'00000000000000000000000000100000.$proc$../rtl/reg.v:16$22'.
     1/1: $0\Q[31:0]
Creating decoders for process `\REG.$proc$../rtl/reg.v:16$21'.
     1/1: $0\Q[15:0]
Creating decoders for process `\Mic_Clk.$proc$../rtl/mic_clk.v:22$15'.
     1/2: $0\count[7:0]
     2/2: $0\micclk_t[0:0]
Creating decoders for process `\shifter.$proc$../rtl/MAF_Filter.v:108$9'.
     1/1: $0\data_out_shifter[31:0]
Creating decoders for process `\adder.$proc$../rtl/MAF_Filter.v:86$7'.
     1/1: $0\data_out_adder[31:0]
Creating decoders for process `\dff.$proc$../rtl/MAF_Filter.v:62$6'.
     1/1: $0\q[31:0]
Creating decoders for process `\MAF_FILTER.$proc$../rtl/MAF_Filter.v:0$5'.

yosys> proc_dlatch

10.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\MAF_FILTER.\connect_wire[0]' from process `\MAF_FILTER.$proc$../rtl/MAF_Filter.v:0$5'.

yosys> proc_dff

10.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\REG\n=s32'00000000000000000000000000100000.\Q' using process `$paramod\REG\n=s32'00000000000000000000000000100000.$proc$../rtl/reg.v:16$22'.
  created $dff cell `$procdff$59' with positive edge clock.
Creating register for signal `\REG.\Q' using process `\REG.$proc$../rtl/reg.v:16$21'.
  created $dff cell `$procdff$60' with positive edge clock.
Creating register for signal `\Mic_Clk.\micclk_t' using process `\Mic_Clk.$proc$../rtl/mic_clk.v:22$15'.
  created $dff cell `$procdff$61' with positive edge clock.
Creating register for signal `\Mic_Clk.\count' using process `\Mic_Clk.$proc$../rtl/mic_clk.v:22$15'.
  created $dff cell `$procdff$62' with positive edge clock.
Creating register for signal `\shifter.\data_out_shifter' using process `\shifter.$proc$../rtl/MAF_Filter.v:108$9'.
  created $dff cell `$procdff$63' with positive edge clock.
Creating register for signal `\adder.\data_out_adder' using process `\adder.$proc$../rtl/MAF_Filter.v:86$7'.
  created $dff cell `$procdff$64' with positive edge clock.
Creating register for signal `\dff.\q' using process `\dff.$proc$../rtl/MAF_Filter.v:62$6'.
  created $dff cell `$procdff$65' with positive edge clock.

yosys> proc_memwr

10.2.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

10.2.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod\REG\n=s32'00000000000000000000000000100000.$proc$../rtl/reg.v:16$22'.
Removing empty process `$paramod\REG\n=s32'00000000000000000000000000100000.$proc$../rtl/reg.v:16$22'.
Found and cleaned up 2 empty switches in `\REG.$proc$../rtl/reg.v:16$21'.
Removing empty process `REG.$proc$../rtl/reg.v:16$21'.
Found and cleaned up 3 empty switches in `\Mic_Clk.$proc$../rtl/mic_clk.v:22$15'.
Removing empty process `Mic_Clk.$proc$../rtl/mic_clk.v:22$15'.
Found and cleaned up 2 empty switches in `\shifter.$proc$../rtl/MAF_Filter.v:108$9'.
Removing empty process `shifter.$proc$../rtl/MAF_Filter.v:108$9'.
Found and cleaned up 2 empty switches in `\adder.$proc$../rtl/MAF_Filter.v:86$7'.
Removing empty process `adder.$proc$../rtl/MAF_Filter.v:86$7'.
Found and cleaned up 2 empty switches in `\dff.$proc$../rtl/MAF_Filter.v:62$6'.
Removing empty process `dff.$proc$../rtl/MAF_Filter.v:62$6'.
Removing empty process `MAF_FILTER.$proc$../rtl/MAF_Filter.v:0$5'.
Cleaned up 13 empty switches.

yosys> opt_expr

10.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module SonarOnChip.
Optimizing module REG.
Optimizing module Mic_Clk.
<suppressed ~2 debug messages>
Optimizing module comparator.
Optimizing module shifter.
<suppressed ~1 debug messages>
Optimizing module adder.
Optimizing module dff.
Optimizing module MAF_FILTER.
Optimizing module signext.
Optimizing module MULTI.
Optimizing module Abs.
<suppressed ~1 debug messages>

yosys> opt_clean

10.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \signext..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Abs..
Removed 9 unused cells and 35 unused wires.
<suppressed ~24 debug messages>

yosys> check

10.5. Executing CHECK pass (checking for obvious problems).
Checking module $paramod\REG\n=s32'00000000000000000000000000100000...
Checking module Abs...
Checking module MAF_FILTER...
Checking module MULTI...
Checking module Mic_Clk...
Checking module REG...
Checking module SonarOnChip...
Warning: Wire SonarOnChip.\wbs_dat_o [32] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [31] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [30] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [29] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [28] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [27] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [26] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [25] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [24] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [23] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [22] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [21] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [20] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [19] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [18] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [17] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [16] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [15] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [14] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [13] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [12] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [11] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [10] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [9] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [8] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [7] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [6] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [5] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [4] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [3] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [2] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [1] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_dat_o [0] is used but has no driver.
Warning: Wire SonarOnChip.\wbs_ack_o is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [127] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [126] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [125] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [124] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [123] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [122] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [121] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [120] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [119] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [118] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [117] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [116] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [115] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [114] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [113] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [112] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [111] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [110] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [109] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [108] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [107] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [106] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [105] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [104] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [103] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [102] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [101] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [100] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [99] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [98] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [97] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [96] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [95] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [94] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [93] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [92] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [91] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [90] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [89] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [88] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [87] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [86] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [85] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [84] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [83] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [82] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [81] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [80] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [79] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [78] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [77] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [76] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [75] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [74] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [73] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [72] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [71] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [70] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [69] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [68] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [67] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [66] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [65] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [64] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [63] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [62] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [61] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [60] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [59] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [58] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [57] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [56] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [55] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [54] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [53] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [52] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [51] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [50] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [49] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [48] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [47] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [46] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [45] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [44] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [43] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [42] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [41] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [40] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [39] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [38] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [37] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [36] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [35] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [34] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [33] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [32] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [31] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [30] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [29] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [28] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [27] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [26] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [25] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [24] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [23] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [22] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [21] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [20] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [19] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [18] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [17] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [16] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [15] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [14] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [13] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [12] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [11] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [10] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [9] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [8] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [7] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [6] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [5] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [4] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [3] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [2] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [1] is used but has no driver.
Warning: Wire SonarOnChip.\la_data_out [0] is used but has no driver.
Warning: Wire SonarOnChip.\irq [2] is used but has no driver.
Warning: Wire SonarOnChip.\irq [1] is used but has no driver.
Warning: Wire SonarOnChip.\irq [0] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [37] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [36] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [35] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [34] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [33] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [32] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [31] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [30] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [29] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [28] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [27] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [26] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [25] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [24] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [23] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [22] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [21] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [20] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [19] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [18] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [17] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [16] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [15] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [14] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [13] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [12] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [11] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [10] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [9] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [8] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [7] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [6] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [5] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [4] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [3] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [2] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [1] is used but has no driver.
Warning: Wire SonarOnChip.\io_out [0] is used but has no driver.
Checking module adder...
Checking module comparator...
Checking module dff...
Checking module shifter...
Checking module signext...
Found and reported 203 problems.

yosys> opt -nodffe -nosdff

10.6. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

10.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge -nomux

10.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_muxtree

10.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $ternary$../rtl/abs.v:9$3: \data_in -> { 1'0 \data_in [30:0] }
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

10.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

10.6.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> opt_expr

10.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.6.9. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

10.7. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

10.7.1. Executing FSM_DETECT pass (finding FSMs in design).

yosys> fsm_extract

10.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

yosys> fsm_opt

10.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> opt_clean

10.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> fsm_opt

10.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

yosys> fsm_recode

10.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

yosys> fsm_info

10.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

yosys> fsm_map

10.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

yosys> opt

10.8. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

10.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge -nomux

10.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_muxtree

10.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~10 debug messages>

yosys> opt_reduce

10.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.8.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$59 ($dff) from module $paramod\REG\n=s32'00000000000000000000000000100000 (D = $procmux$23_Y, Q = \Q, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$66 ($sdff) from module $paramod\REG\n=s32'00000000000000000000000000100000 (D = \D, Q = \Q).
Adding SRST signal on $procdff$62 ($dff) from module Mic_Clk (D = $add$../rtl/mic_clk.v:31$18_Y, Q = \count, rval = 8'00000000).
Adding SRST signal on $procdff$61 ($dff) from module Mic_Clk (D = $procmux$39_Y, Q = \micclk_t, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$73 ($sdff) from module Mic_Clk (D = $not$../rtl/mic_clk.v:35$20_Y, Q = \micclk_t).
Adding SRST signal on $procdff$60 ($dff) from module REG (D = $procmux$28_Y, Q = \Q, rval = 16'0000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$75 ($sdff) from module REG (D = \D, Q = \Q).
Adding SRST signal on $procdff$64 ($dff) from module adder (D = $procmux$49_Y, Q = \data_out_adder, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$77 ($sdff) from module adder (D = $add$../rtl/MAF_Filter.v:92$8_Y, Q = \data_out_adder).
Adding SRST signal on $procdff$65 ($dff) from module dff (D = $procmux$54_Y, Q = \q, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$79 ($sdff) from module dff (D = \d, Q = \q).
Adding SRST signal on $procdff$63 ($dff) from module shifter (D = $procmux$44_Y, Q = \data_out_shifter, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$81 ($sdff) from module shifter (D = { 2'00 \data_in_shifter [31:2] }, Q = \data_out_shifter).
Setting constant 0-bit at position 30 on $auto$opt_dff.cc:764:run$82 ($sdffe) from module shifter.
Setting constant 0-bit at position 31 on $auto$opt_dff.cc:764:run$82 ($sdffe) from module shifter.

yosys> opt_clean

10.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..
Removed 14 unused cells and 14 unused wires.
<suppressed ~20 debug messages>

yosys> opt_expr

10.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.8.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

10.8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

10.8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.8.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> opt_expr

10.8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.8.16. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce

10.9. Executing WREDUCE pass (reducing word size of cells).
Removed top 6 bits (of 8) from port B of cell Mic_Clk.$eq$../rtl/mic_clk.v:19$13 ($eq).
Removed top 6 bits (of 8) from port B of cell Mic_Clk.$lt$../rtl/mic_clk.v:30$17 ($lt).

yosys> peepopt

10.10. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

10.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> alumacc

10.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module $paramod\REG\n=s32'00000000000000000000000000100000:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Abs:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module MAF_FILTER:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module MULTI:
  creating $macc model for $mul$../rtl/multiplier.v:12$4 ($mul).
  creating $macc cell for $mul$../rtl/multiplier.v:12$4: $auto$alumacc.cc:365:replace_macc$83
  created 0 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module Mic_Clk:
  creating $macc model for $add$../rtl/mic_clk.v:31$18 ($add).
  creating $alu model for $macc $add$../rtl/mic_clk.v:31$18.
  creating $alu model for $lt$../rtl/mic_clk.v:30$17 ($lt): new $alu
  creating $alu model for $eq$../rtl/mic_clk.v:19$13 ($eq): merged with $lt$../rtl/mic_clk.v:30$17.
  creating $alu cell for $lt$../rtl/mic_clk.v:30$17, $eq$../rtl/mic_clk.v:19$13: $auto$alumacc.cc:485:replace_alu$85
  creating $alu cell for $add$../rtl/mic_clk.v:31$18: $auto$alumacc.cc:485:replace_alu$96
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module REG:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module SonarOnChip:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module adder:
  creating $macc model for $add$../rtl/MAF_Filter.v:92$8 ($add).
  creating $alu model for $macc $add$../rtl/MAF_Filter.v:92$8.
  creating $alu cell for $add$../rtl/MAF_Filter.v:92$8: $auto$alumacc.cc:485:replace_alu$99
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module comparator:
  creating $alu model for $ge$../rtl/comparator.v:9$11 ($ge): new $alu
  creating $alu cell for $ge$../rtl/comparator.v:9$11: $auto$alumacc.cc:485:replace_alu$103
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module dff:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module shifter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module signext:
  created 0 $alu and 0 $macc cells.

yosys> share

10.13. Executing SHARE pass (SAT-based resource sharing).

yosys> opt

10.14. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

10.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
<suppressed ~1 debug messages>
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge -nomux

10.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_muxtree

10.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

10.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.14.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..
Removed 1 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

yosys> opt_expr

10.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.14.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

10.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3 debug messages>

yosys> opt_reduce

10.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.14.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> opt_expr

10.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.14.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

10.15. Executing MEMORY pass.

yosys> opt_mem

10.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> memory_dff

10.15.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

yosys> opt_clean

10.15.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> memory_share

10.15.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

yosys> opt_clean

10.15.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> memory_collect

10.15.6. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

10.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> opt -fast -full

10.17. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

10.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
<suppressed ~2 debug messages>
Optimizing module REG.
Optimizing module SonarOnChip.
<suppressed ~18 debug messages>
Optimizing module adder.
Optimizing module comparator.
<suppressed ~1 debug messages>
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge

10.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.17.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..
Removed 2 unused cells and 4 unused wires.
<suppressed ~4 debug messages>

10.17.5. Finished fast OPT passes.

yosys> memory_map

10.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

yosys> opt -full

10.19. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

10.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge -nomux

10.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_muxtree

10.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod\REG\n=s32'00000000000000000000000000100000..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Abs..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \MAF_FILTER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \MULTI..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Mic_Clk..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \REG..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SonarOnChip..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \adder..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \comparator..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \dff..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \shifter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \signext..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~1 debug messages>

yosys> opt_reduce -full

10.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module $paramod\REG\n=s32'00000000000000000000000000100000.
  Optimizing cells in module \Abs.
  Optimizing cells in module \MAF_FILTER.
  Optimizing cells in module \MULTI.
  Optimizing cells in module \Mic_Clk.
  Optimizing cells in module \REG.
  Optimizing cells in module \SonarOnChip.
  Optimizing cells in module \adder.
  Optimizing cells in module \comparator.
  Optimizing cells in module \dff.
  Optimizing cells in module \shifter.
  Optimizing cells in module \signext.
Performed a total of 0 changes.

yosys> opt_merge

10.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_share

10.19.6. Executing OPT_SHARE pass.

yosys> opt_dff

10.19.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..

yosys> opt_expr -full

10.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

10.19.10. Finished OPT passes. (There is nothing left to do.)

yosys> techmap

10.20. Executing TECHMAP pass (map to technology primitives).

10.20.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $and.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$c3cd1564c35d873179656addd6052d7ea8b6d991\_90_alu for cells of type $alu.
Using template $paramod$821d2886e47353e724eaca46af4992e9c3e6ac1d\_90_alu for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000001000 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000110 for cells of type $lcu.
Using extmapper maccmap for cells of type $macc.
  add \data_i * \amplify (32x32 bits, unsigned)
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000100000 for cells of type $fa.
No more expansions possible.
<suppressed ~1362 debug messages>

yosys> opt -fast

10.21. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

10.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
<suppressed ~2995 debug messages>
Optimizing module Mic_Clk.
<suppressed ~75 debug messages>
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
<suppressed ~36 debug messages>
Optimizing module comparator.
<suppressed ~35 debug messages>
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge

10.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
<suppressed ~33 debug messages>
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
<suppressed ~78 debug messages>
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 37 cells.

yosys> opt_dff

10.21.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..
Removed 277 unused cells and 576 unused wires.
<suppressed ~281 debug messages>

10.21.5. Finished fast OPT passes.

yosys> abc -fast

10.22. Executing ABC pass (technology mapping using ABC).

10.22.1. Extracting gate netlist of module `$paramod\REG\n=s32'00000000000000000000000000100000' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.2. Extracting gate netlist of module `\Abs' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 97 wires to a netlist network with 32 inputs and 32 outputs.

10.22.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.22.2.2. Re-integrating ABC results.
ABC RESULTS:               XOR cells:       31
ABC RESULTS:              ZERO cells:        1
ABC RESULTS:        internal signals:       33
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       32
Removing temp directory.

10.22.3. Extracting gate netlist of module `\MAF_FILTER' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.4. Extracting gate netlist of module `\MULTI' to `<abc-temp-dir>/input.blif'..
Extracted 2997 gates and 3061 wires to a netlist network with 64 inputs and 32 outputs.

10.22.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.22.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      426
ABC RESULTS:            ANDNOT cells:      876
ABC RESULTS:              NAND cells:      224
ABC RESULTS:               NOR cells:       80
ABC RESULTS:               NOT cells:       48
ABC RESULTS:                OR cells:      333
ABC RESULTS:             ORNOT cells:       32
ABC RESULTS:              XNOR cells:      236
ABC RESULTS:               XOR cells:      790
ABC RESULTS:        internal signals:     2965
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       32
Removing temp directory.

10.22.5. Extracting gate netlist of module `\Mic_Clk' to `<abc-temp-dir>/input.blif'..
Extracted 34 gates and 44 wires to a netlist network with 10 inputs and 11 outputs.

10.22.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.22.5.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:        5
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        2
ABC RESULTS:                OR cells:        8
ABC RESULTS:             ORNOT cells:        1
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       23
ABC RESULTS:           input signals:       10
ABC RESULTS:          output signals:       11
Removing temp directory.

10.22.6. Extracting gate netlist of module `\REG' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.7. Extracting gate netlist of module `\SonarOnChip' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.8. Extracting gate netlist of module `\adder' to `<abc-temp-dir>/input.blif'..
Extracted 220 gates and 284 wires to a netlist network with 64 inputs and 32 outputs.

10.22.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.22.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       13
ABC RESULTS:            ANDNOT cells:       47
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:       28
ABC RESULTS:                OR cells:       43
ABC RESULTS:             ORNOT cells:        8
ABC RESULTS:              XNOR cells:       34
ABC RESULTS:               XOR cells:       29
ABC RESULTS:        internal signals:      188
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:       32
Removing temp directory.

10.22.9. Extracting gate netlist of module `\comparator' to `<abc-temp-dir>/input.blif'..
Extracted 194 gates and 258 wires to a netlist network with 64 inputs and 1 outputs.

10.22.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

10.22.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        7
ABC RESULTS:            ANDNOT cells:       75
ABC RESULTS:              NAND cells:        8
ABC RESULTS:                OR cells:        6
ABC RESULTS:             ORNOT cells:       30
ABC RESULTS:              XNOR cells:       24
ABC RESULTS:               XOR cells:        8
ABC RESULTS:        internal signals:      193
ABC RESULTS:           input signals:       64
ABC RESULTS:          output signals:        1
Removing temp directory.

10.22.10. Extracting gate netlist of module `\dff' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.11. Extracting gate netlist of module `\shifter' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

10.22.12. Extracting gate netlist of module `\signext' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

yosys> opt -fast

10.23. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

10.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod\REG\n=s32'00000000000000000000000000100000.
Optimizing module Abs.
Optimizing module MAF_FILTER.
Optimizing module MULTI.
Optimizing module Mic_Clk.
Optimizing module REG.
Optimizing module SonarOnChip.
Optimizing module adder.
Optimizing module comparator.
Optimizing module dff.
Optimizing module shifter.
Optimizing module signext.

yosys> opt_merge

10.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Finding identical cells in module `\Abs'.
Finding identical cells in module `\MAF_FILTER'.
Finding identical cells in module `\MULTI'.
Finding identical cells in module `\Mic_Clk'.
Finding identical cells in module `\REG'.
Finding identical cells in module `\SonarOnChip'.
Finding identical cells in module `\adder'.
Finding identical cells in module `\comparator'.
Finding identical cells in module `\dff'.
Finding identical cells in module `\shifter'.
Finding identical cells in module `\signext'.
Removed a total of 0 cells.

yosys> opt_dff

10.23.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

10.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module $paramod\REG\n=s32'00000000000000000000000000100000..
Finding unused cells or wires in module \Abs..
Finding unused cells or wires in module \MAF_FILTER..
Finding unused cells or wires in module \MULTI..
Finding unused cells or wires in module \Mic_Clk..
Finding unused cells or wires in module \REG..
Finding unused cells or wires in module \SonarOnChip..
Finding unused cells or wires in module \adder..
Finding unused cells or wires in module \comparator..
Finding unused cells or wires in module \dff..
Finding unused cells or wires in module \shifter..
Finding unused cells or wires in module \signext..
Removed 0 unused cells and 766 unused wires.
<suppressed ~5 debug messages>

10.23.5. Finished fast OPT passes.

yosys> hierarchy -check

10.24. Executing HIERARCHY pass (managing design hierarchy).

10.24.1. Analyzing design hierarchy..
Top module:  \SonarOnChip

10.24.2. Analyzing design hierarchy..
Top module:  \SonarOnChip
Removing unused module `$paramod\REG\n=s32'00000000000000000000000000100000'.
Removing unused module `\Abs'.
Removing unused module `\MAF_FILTER'.
Removing unused module `\MULTI'.
Removing unused module `\Mic_Clk'.
Removing unused module `\REG'.
Removing unused module `\adder'.
Removing unused module `\comparator'.
Removing unused module `\dff'.
Removing unused module `\shifter'.
Removing unused module `\signext'.
Removed 11 unused modules.

yosys> stat

10.25. Printing statistics.

=== SonarOnChip ===

   Number of wires:                 27
   Number of wire bits:            827
   Number of public wires:          27
   Number of public wire bits:     827
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  0


yosys> check

10.26. Executing CHECK pass (checking for obvious problems).
Checking module SonarOnChip...
Found and reported 0 problems.

yosys> dfflibmap -liberty /home/student/openlane/pdks/libraries/sky130_fd_sc_hd/latest/timing/sky130_fd_sc_hd__tt_025C_1v80.lib

11. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
